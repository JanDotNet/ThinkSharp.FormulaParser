//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from FormulaGrammer.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public partial class FormulaGrammerLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		LPAREN=1, RPAREN=2, PLUS=3, MINUS=4, TIMES=5, DIV=6, COMMA=7, POINT=8, 
		POW=9, IDENTIFIER=10, DECIMAL_NUMBER=11, INTEGER_NUMBER=12, PREFIX_BIN_NUMBER=13, 
		PREFIX_HEX_NUMBER=14, PREFIX_INT_NUMBER=15, PREFIX_OCT_NUMBER=16, PREFIX_DEC_NUMBER=17, 
		WS=18;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"LPAREN", "RPAREN", "PLUS", "MINUS", "TIMES", "DIV", "COMMA", "POINT", 
		"POW", "IDENTIFIER", "DECIMAL_NUMBER", "INTEGER_NUMBER", "PREFIX_BIN_NUMBER", 
		"PREFIX_HEX_NUMBER", "PREFIX_INT_NUMBER", "PREFIX_OCT_NUMBER", "PREFIX_DEC_NUMBER", 
		"VALID_ID_START", "VALID_ID_CHAR", "NUMBER_INT", "NUMBER_OCT", "NUMBER_DEC", 
		"NUMBER_BIN", "NUMBER_HEX", "PREFIX_DEC", "PREFIX_INT", "PREFIX_OCT", 
		"PREFIX_BIN", "PREFIX_HEX", "E", "SIGN", "WS"
	};


	public FormulaGrammerLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public FormulaGrammerLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", "'+'", "'-'", "'*'", "'/'", "','", "'.'", "'^'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "LPAREN", "RPAREN", "PLUS", "MINUS", "TIMES", "DIV", "COMMA", "POINT", 
		"POW", "IDENTIFIER", "DECIMAL_NUMBER", "INTEGER_NUMBER", "PREFIX_BIN_NUMBER", 
		"PREFIX_HEX_NUMBER", "PREFIX_INT_NUMBER", "PREFIX_OCT_NUMBER", "PREFIX_DEC_NUMBER", 
		"WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "FormulaGrammer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static FormulaGrammerLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x14', '\xB2', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', '\x1D', '\t', 
		'\x1D', '\x4', '\x1E', '\t', '\x1E', '\x4', '\x1F', '\t', '\x1F', '\x4', 
		' ', '\t', ' ', '\x4', '!', '\t', '!', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', 
		'\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', 
		'\v', '\x3', '\v', '\a', '\v', 'X', '\n', '\v', '\f', '\v', '\xE', '\v', 
		'[', '\v', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', 
		'\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', 
		'\xF', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x11', '\x3', 
		'\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x5', 
		'\x12', 'p', '\n', '\x12', '\x3', '\x13', '\x5', '\x13', 's', '\n', '\x13', 
		'\x3', '\x14', '\x3', '\x14', '\x5', '\x14', 'w', '\n', '\x14', '\x3', 
		'\x15', '\x6', '\x15', 'z', '\n', '\x15', '\r', '\x15', '\xE', '\x15', 
		'{', '\x3', '\x16', '\x6', '\x16', '\x7F', '\n', '\x16', '\r', '\x16', 
		'\xE', '\x16', '\x80', '\x3', '\x17', '\a', '\x17', '\x84', '\n', '\x17', 
		'\f', '\x17', '\xE', '\x17', '\x87', '\v', '\x17', '\x3', '\x17', '\x3', 
		'\x17', '\x6', '\x17', '\x8B', '\n', '\x17', '\r', '\x17', '\xE', '\x17', 
		'\x8C', '\x3', '\x18', '\x6', '\x18', '\x90', '\n', '\x18', '\r', '\x18', 
		'\xE', '\x18', '\x91', '\x3', '\x19', '\x6', '\x19', '\x95', '\n', '\x19', 
		'\r', '\x19', '\xE', '\x19', '\x96', '\x3', '\x1A', '\x3', '\x1A', '\x3', 
		'\x1A', '\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1C', '\x3', 
		'\x1C', '\x3', '\x1C', '\x3', '\x1D', '\x3', '\x1D', '\x3', '\x1D', '\x3', 
		'\x1E', '\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1F', '\x3', '\x1F', '\x3', 
		' ', '\x3', ' ', '\x3', '!', '\x6', '!', '\xAD', '\n', '!', '\r', '!', 
		'\xE', '!', '\xAE', '\x3', '!', '\x3', '!', '\x2', '\x2', '\"', '\x3', 
		'\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', 
		'\xF', '\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', 
		'\xE', '\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x12', '#', 
		'\x13', '%', '\x2', '\'', '\x2', ')', '\x2', '+', '\x2', '-', '\x2', '/', 
		'\x2', '\x31', '\x2', '\x33', '\x2', '\x35', '\x2', '\x37', '\x2', '\x39', 
		'\x2', ';', '\x2', '=', '\x2', '?', '\x2', '\x41', '\x14', '\x3', '\x2', 
		'\f', '\x6', '\x2', '&', '&', '\x43', '\\', '\x61', '\x61', '\x63', '|', 
		'\x5', '\x2', '\x32', ';', '\x43', 'H', '\x63', 'h', '\x4', '\x2', '\x46', 
		'\x46', '\x66', '\x66', '\x4', '\x2', 'K', 'K', 'k', 'k', '\x4', '\x2', 
		'Q', 'Q', 'q', 'q', '\x4', '\x2', '\x44', '\x44', '\x64', '\x64', '\x4', 
		'\x2', 'Z', 'Z', 'z', 'z', '\x4', '\x2', 'G', 'G', 'g', 'g', '\x4', '\x2', 
		'-', '-', '/', '/', '\x5', '\x2', '\v', '\f', '\xF', '\xF', '\"', '\"', 
		'\x2', '\xAD', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x41', '\x3', '\x2', '\x2', '\x2', '\x3', '\x43', '\x3', '\x2', 
		'\x2', '\x2', '\x5', '\x45', '\x3', '\x2', '\x2', '\x2', '\a', 'G', '\x3', 
		'\x2', '\x2', '\x2', '\t', 'I', '\x3', '\x2', '\x2', '\x2', '\v', 'K', 
		'\x3', '\x2', '\x2', '\x2', '\r', 'M', '\x3', '\x2', '\x2', '\x2', '\xF', 
		'O', '\x3', '\x2', '\x2', '\x2', '\x11', 'Q', '\x3', '\x2', '\x2', '\x2', 
		'\x13', 'S', '\x3', '\x2', '\x2', '\x2', '\x15', 'U', '\x3', '\x2', '\x2', 
		'\x2', '\x17', '\\', '\x3', '\x2', '\x2', '\x2', '\x19', '^', '\x3', '\x2', 
		'\x2', '\x2', '\x1B', '`', '\x3', '\x2', '\x2', '\x2', '\x1D', '\x63', 
		'\x3', '\x2', '\x2', '\x2', '\x1F', '\x66', '\x3', '\x2', '\x2', '\x2', 
		'!', 'i', '\x3', '\x2', '\x2', '\x2', '#', 'l', '\x3', '\x2', '\x2', '\x2', 
		'%', 'r', '\x3', '\x2', '\x2', '\x2', '\'', 'v', '\x3', '\x2', '\x2', 
		'\x2', ')', 'y', '\x3', '\x2', '\x2', '\x2', '+', '~', '\x3', '\x2', '\x2', 
		'\x2', '-', '\x85', '\x3', '\x2', '\x2', '\x2', '/', '\x8F', '\x3', '\x2', 
		'\x2', '\x2', '\x31', '\x94', '\x3', '\x2', '\x2', '\x2', '\x33', '\x98', 
		'\x3', '\x2', '\x2', '\x2', '\x35', '\x9B', '\x3', '\x2', '\x2', '\x2', 
		'\x37', '\x9E', '\x3', '\x2', '\x2', '\x2', '\x39', '\xA1', '\x3', '\x2', 
		'\x2', '\x2', ';', '\xA4', '\x3', '\x2', '\x2', '\x2', '=', '\xA7', '\x3', 
		'\x2', '\x2', '\x2', '?', '\xA9', '\x3', '\x2', '\x2', '\x2', '\x41', 
		'\xAC', '\x3', '\x2', '\x2', '\x2', '\x43', '\x44', '\a', '*', '\x2', 
		'\x2', '\x44', '\x4', '\x3', '\x2', '\x2', '\x2', '\x45', '\x46', '\a', 
		'+', '\x2', '\x2', '\x46', '\x6', '\x3', '\x2', '\x2', '\x2', 'G', 'H', 
		'\a', '-', '\x2', '\x2', 'H', '\b', '\x3', '\x2', '\x2', '\x2', 'I', 'J', 
		'\a', '/', '\x2', '\x2', 'J', '\n', '\x3', '\x2', '\x2', '\x2', 'K', 'L', 
		'\a', ',', '\x2', '\x2', 'L', '\f', '\x3', '\x2', '\x2', '\x2', 'M', 'N', 
		'\a', '\x31', '\x2', '\x2', 'N', '\xE', '\x3', '\x2', '\x2', '\x2', 'O', 
		'P', '\a', '.', '\x2', '\x2', 'P', '\x10', '\x3', '\x2', '\x2', '\x2', 
		'Q', 'R', '\a', '\x30', '\x2', '\x2', 'R', '\x12', '\x3', '\x2', '\x2', 
		'\x2', 'S', 'T', '\a', '`', '\x2', '\x2', 'T', '\x14', '\x3', '\x2', '\x2', 
		'\x2', 'U', 'Y', '\x5', '%', '\x13', '\x2', 'V', 'X', '\x5', '\'', '\x14', 
		'\x2', 'W', 'V', '\x3', '\x2', '\x2', '\x2', 'X', '[', '\x3', '\x2', '\x2', 
		'\x2', 'Y', 'W', '\x3', '\x2', '\x2', '\x2', 'Y', 'Z', '\x3', '\x2', '\x2', 
		'\x2', 'Z', '\x16', '\x3', '\x2', '\x2', '\x2', '[', 'Y', '\x3', '\x2', 
		'\x2', '\x2', '\\', ']', '\x5', '-', '\x17', '\x2', ']', '\x18', '\x3', 
		'\x2', '\x2', '\x2', '^', '_', '\x5', ')', '\x15', '\x2', '_', '\x1A', 
		'\x3', '\x2', '\x2', '\x2', '`', '\x61', '\x5', '\x39', '\x1D', '\x2', 
		'\x61', '\x62', '\x5', '/', '\x18', '\x2', '\x62', '\x1C', '\x3', '\x2', 
		'\x2', '\x2', '\x63', '\x64', '\x5', ';', '\x1E', '\x2', '\x64', '\x65', 
		'\x5', '\x31', '\x19', '\x2', '\x65', '\x1E', '\x3', '\x2', '\x2', '\x2', 
		'\x66', 'g', '\x5', '\x35', '\x1B', '\x2', 'g', 'h', '\x5', ')', '\x15', 
		'\x2', 'h', ' ', '\x3', '\x2', '\x2', '\x2', 'i', 'j', '\x5', '\x37', 
		'\x1C', '\x2', 'j', 'k', '\x5', '+', '\x16', '\x2', 'k', '\"', '\x3', 
		'\x2', '\x2', '\x2', 'l', 'o', '\x5', '\x33', '\x1A', '\x2', 'm', 'p', 
		'\x5', '-', '\x17', '\x2', 'n', 'p', '\x5', ')', '\x15', '\x2', 'o', 'm', 
		'\x3', '\x2', '\x2', '\x2', 'o', 'n', '\x3', '\x2', '\x2', '\x2', 'p', 
		'$', '\x3', '\x2', '\x2', '\x2', 'q', 's', '\t', '\x2', '\x2', '\x2', 
		'r', 'q', '\x3', '\x2', '\x2', '\x2', 's', '&', '\x3', '\x2', '\x2', '\x2', 
		't', 'w', '\x5', '%', '\x13', '\x2', 'u', 'w', '\x4', '\x32', ';', '\x2', 
		'v', 't', '\x3', '\x2', '\x2', '\x2', 'v', 'u', '\x3', '\x2', '\x2', '\x2', 
		'w', '(', '\x3', '\x2', '\x2', '\x2', 'x', 'z', '\x4', '\x32', ';', '\x2', 
		'y', 'x', '\x3', '\x2', '\x2', '\x2', 'z', '{', '\x3', '\x2', '\x2', '\x2', 
		'{', 'y', '\x3', '\x2', '\x2', '\x2', '{', '|', '\x3', '\x2', '\x2', '\x2', 
		'|', '*', '\x3', '\x2', '\x2', '\x2', '}', '\x7F', '\x4', '\x32', '\x39', 
		'\x2', '~', '}', '\x3', '\x2', '\x2', '\x2', '\x7F', '\x80', '\x3', '\x2', 
		'\x2', '\x2', '\x80', '~', '\x3', '\x2', '\x2', '\x2', '\x80', '\x81', 
		'\x3', '\x2', '\x2', '\x2', '\x81', ',', '\x3', '\x2', '\x2', '\x2', '\x82', 
		'\x84', '\x4', '\x32', ';', '\x2', '\x83', '\x82', '\x3', '\x2', '\x2', 
		'\x2', '\x84', '\x87', '\x3', '\x2', '\x2', '\x2', '\x85', '\x83', '\x3', 
		'\x2', '\x2', '\x2', '\x85', '\x86', '\x3', '\x2', '\x2', '\x2', '\x86', 
		'\x88', '\x3', '\x2', '\x2', '\x2', '\x87', '\x85', '\x3', '\x2', '\x2', 
		'\x2', '\x88', '\x8A', '\a', '\x30', '\x2', '\x2', '\x89', '\x8B', '\x4', 
		'\x32', ';', '\x2', '\x8A', '\x89', '\x3', '\x2', '\x2', '\x2', '\x8B', 
		'\x8C', '\x3', '\x2', '\x2', '\x2', '\x8C', '\x8A', '\x3', '\x2', '\x2', 
		'\x2', '\x8C', '\x8D', '\x3', '\x2', '\x2', '\x2', '\x8D', '.', '\x3', 
		'\x2', '\x2', '\x2', '\x8E', '\x90', '\x4', '\x32', '\x33', '\x2', '\x8F', 
		'\x8E', '\x3', '\x2', '\x2', '\x2', '\x90', '\x91', '\x3', '\x2', '\x2', 
		'\x2', '\x91', '\x8F', '\x3', '\x2', '\x2', '\x2', '\x91', '\x92', '\x3', 
		'\x2', '\x2', '\x2', '\x92', '\x30', '\x3', '\x2', '\x2', '\x2', '\x93', 
		'\x95', '\t', '\x3', '\x2', '\x2', '\x94', '\x93', '\x3', '\x2', '\x2', 
		'\x2', '\x95', '\x96', '\x3', '\x2', '\x2', '\x2', '\x96', '\x94', '\x3', 
		'\x2', '\x2', '\x2', '\x96', '\x97', '\x3', '\x2', '\x2', '\x2', '\x97', 
		'\x32', '\x3', '\x2', '\x2', '\x2', '\x98', '\x99', '\a', '\x32', '\x2', 
		'\x2', '\x99', '\x9A', '\t', '\x4', '\x2', '\x2', '\x9A', '\x34', '\x3', 
		'\x2', '\x2', '\x2', '\x9B', '\x9C', '\a', '\x32', '\x2', '\x2', '\x9C', 
		'\x9D', '\t', '\x5', '\x2', '\x2', '\x9D', '\x36', '\x3', '\x2', '\x2', 
		'\x2', '\x9E', '\x9F', '\a', '\x32', '\x2', '\x2', '\x9F', '\xA0', '\t', 
		'\x6', '\x2', '\x2', '\xA0', '\x38', '\x3', '\x2', '\x2', '\x2', '\xA1', 
		'\xA2', '\a', '\x32', '\x2', '\x2', '\xA2', '\xA3', '\t', '\a', '\x2', 
		'\x2', '\xA3', ':', '\x3', '\x2', '\x2', '\x2', '\xA4', '\xA5', '\a', 
		'\x32', '\x2', '\x2', '\xA5', '\xA6', '\t', '\b', '\x2', '\x2', '\xA6', 
		'<', '\x3', '\x2', '\x2', '\x2', '\xA7', '\xA8', '\t', '\t', '\x2', '\x2', 
		'\xA8', '>', '\x3', '\x2', '\x2', '\x2', '\xA9', '\xAA', '\t', '\n', '\x2', 
		'\x2', '\xAA', '@', '\x3', '\x2', '\x2', '\x2', '\xAB', '\xAD', '\t', 
		'\v', '\x2', '\x2', '\xAC', '\xAB', '\x3', '\x2', '\x2', '\x2', '\xAD', 
		'\xAE', '\x3', '\x2', '\x2', '\x2', '\xAE', '\xAC', '\x3', '\x2', '\x2', 
		'\x2', '\xAE', '\xAF', '\x3', '\x2', '\x2', '\x2', '\xAF', '\xB0', '\x3', 
		'\x2', '\x2', '\x2', '\xB0', '\xB1', '\b', '!', '\x2', '\x2', '\xB1', 
		'\x42', '\x3', '\x2', '\x2', '\x2', '\xF', '\x2', 'Y', 'o', 'r', 'v', 
		'{', '\x80', '\x85', '\x8C', '\x91', '\x94', '\x96', '\xAE', '\x3', '\b', 
		'\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
